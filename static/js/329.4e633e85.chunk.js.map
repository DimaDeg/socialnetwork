{"version":3,"file":"static/js/329.4e633e85.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.tsx","webpack://socialnetwork/./src/components/Content/Dialogs/Dialogs.module.css?5cdb","webpack://socialnetwork/./src/components/Content/Dialogs/Dialog/dialog.module.css?b7d7","components/Content/Dialogs/Dialog/Dialog.tsx","components/Content/Dialogs/Message/Message.tsx","components/Content/Dialogs/DialogsForm.tsx","components/Content/Dialogs/DialogsContainer.tsx","components/Content/Dialogs/Dialogs.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport { AppStateType } from \"../Redux/ReduxStore\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({isAuth: state.Auth.isAuth})\r\n\r\n\r\nexport const withAuthRedirect = <P extends object>(Component:React.ComponentType<P>):React.FC<P> => {\r\n    const WithRedirect: React.FC<MapStatePropsType> =({isAuth,...props}) =>{\r\n        if(!isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props as P}/>\r\n    }\r\n    return connect(mapStateToProps)(WithRedirect)\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogsMain\":\"Dialogs_dialogsMain__I2tHe\",\"dialogs\":\"Dialogs_dialogs__RxoNe\",\"messages\":\"Dialogs_messages__3adqm\",\"bubble\":\"Dialogs_bubble__8VK-n\",\"active\":\"Dialogs_active__raA3S\",\"item\":\"Dialogs_item__ilvyR\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"dialog_item__Fkc4N\"};","import s from \"./dialog.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\nimport {DialogType} from \"../../../../Redux/reducers/dialogs-reducer\";\n\nexport const Dialog: React.FC<DialogType> = (props) => {\n\n    return (\n        <div>\n                <NavLink to={'dialogs/' + props.id} className={s.item}>\n                    <img src={props.avatar} alt={props.name}/>\n                    {props.name}\n                </NavLink>\n\n        </div>\n    )\n}","import React from \"react\";\nimport {MessageType} from \"../../../../Redux/reducers/dialogs-reducer\";\n\n\n\nexport const Message:React.FC<MessageType> = (props:MessageType) => {\n    return(\n        <div key={props.id}>\n            {props.message}\n        </div>\n    )\n}","import React from 'react';\r\nimport { useFormik} from 'formik';\r\n\r\ntype DialogFormTextareaPropsType = {\r\n    sendMessage: (text: string) => void\r\n}\r\n\r\nexport const DialogForm: React.FC<DialogFormTextareaPropsType> = ({sendMessage}) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            message: ''\r\n        },\r\n        onSubmit: (values, {resetForm}) => {\r\n            sendMessage(values.message)\r\n            resetForm({values: {message: ''}})\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <label htmlFor={'message'}>\r\n                <input name={'message'} id={'message'} placeholder={'Enter your message'} onChange={formik.handleChange} value={formik.values.message}/>\r\n            </label>\r\n            <button disabled={formik.values.message === ''} type={'submit'}>Send</button>\r\n        </form>\r\n    )\r\n}","import {InitialDialogsType, SendMessageAC} from \"../../../Redux/reducers/dialogs-reducer\";\nimport {Dialogs} from './Dialogs';\nimport {AppStateType} from \"../../../Redux/ReduxStore\";\nimport {compose, Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../../HOC/withAuthRedirect\";\nimport React from \"react\";\n\ntype MapStateType = {\n    DialogsPage: InitialDialogsType\n}\n\ntype MapDispatchToProps = {\n    sendMessage: (message:string) => void\n}\nexport type DialogsPageType = MapStateType & MapDispatchToProps\n\n\nconst mapStateToProps = (state: AppStateType): MapStateType => {\n    return {\n        DialogsPage: state.DialogsPage,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\n    return {\n        sendMessage: (message) => dispatch(SendMessageAC(message)),\n    }\n\n}\n\nconst DialogsContainer = compose<React.ComponentType>(withAuthRedirect,connect(mapStateToProps, mapDispatchToProps))(Dialogs)\nexport default DialogsContainer","import React from 'react';\nimport s from \"./Dialogs.module.css\"\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {Message} from \"./Message/Message\";\nimport {DialogsPageType} from \"./DialogsContainer\";\nimport {DialogForm} from \"./DialogsForm\";\n\n\nexport const Dialogs: React.FC<DialogsPageType> = (props) => {\n\n    let dialogsElement = props.DialogsPage.dialogs.map((d) => <div key={d.id} className={s.item}>\n        <Dialog\n            avatar={d.avatar}\n            name={d.name}\n            id={d.id}/>\n    </div>)\n\n    let messagesElements = props.DialogsPage.messages.map((m) => <div key={m.id} className={s.bubble}>\n        <Message\n            id={m.id}\n            message={m.message}/>\n    </div>)\n\n\n    return (\n        <div className={s.dialogsMain}>\n            <div className={s.messages}>\n                {messagesElements}\n                <DialogForm sendMessage={props.sendMessage}/>\n            </div>\n            <div className={s.dialogs}>\n                {dialogsElement}\n            </div>\n        </div>\n\n    )\n\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["mapStateToProps","state","isAuth","Auth","withAuthRedirect","Component","connect","props","to","Dialog","id","className","s","src","avatar","alt","name","Message","message","DialogForm","sendMessage","formik","useFormik","initialValues","onSubmit","values","resetForm","handleSubmit","htmlFor","placeholder","onChange","handleChange","value","disabled","type","compose","DialogsPage","dispatch","SendMessageAC","dialogsElement","dialogs","map","d","messagesElements","messages","m","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}